# Application pages

GET           /                                                              controllers.core.Dashboard.index
GET           /about                                                         controllers.core.Dashboard.about
GET           /apiv2                                                         controllers.core.Dashboard.apiv2
GET           /profile                                                       controllers.core.Dashboard.profile

POST          /brand/:id/activation                                          controllers.Brands.activation(id: Long)
GET           /brands                                                        controllers.Brands.index
GET           /brand/new                                                     controllers.Brands.add
POST          /brand/new                                                     controllers.Brands.create
GET           /brand/:id                                                     controllers.Brands.details(id: Long)
GET           /brand/:id/tabs/coordinator                                    controllers.Brands.renderCoordinatorTabs(id: Long, tab: String)
GET           /brand/:id/tabs                                                controllers.Brands.renderTabs(id: Long, tab: String)
POST          /brand/:id/member                                              controllers.Brands.addCoordinator(id: Long)
DELETE        /brand/:id/member/:personId                                    controllers.Brands.removeCoordinator(id: Long, personId: Long)
POST          /brand/:id                                                     controllers.Brands.update(id: Long)
GET           /brand/:id/edit                                                controllers.Brands.edit(id: Long)
POST          /brand/:id/delete                                              controllers.Brands.delete(id: Long)
GET           /brand/:code/picture                                           controllers.Brands.picture(code: String)
POST          /brand/:id/picture/delete                                      controllers.Brands.deletePicture(id: Long)


POST          /brand/:id/coordinator/:personId/type/:notification/off        controllers.Brands.turnNotificationOff(id: Long, personId: Long, notification)
POST          /brand/:id/coordinator/:personId/type/:notification/on         controllers.Brands.turnNotificationOn(id: Long, personId: Long, notification)

POST          /brand/:brandId/link                                           controllers.BrandLinks.create(brandId: Long)
DELETE        /brand/:brandId/link/:id                                       controllers.BrandLinks.remove(brandId: Long, id: Long)

GET           /brand/:brandId/testimonial                                    controllers.BrandTestimonials.add(brandId: Long)
GET           /brand/:brandId/testimonial/:id                                controllers.BrandTestimonials.edit(brandId: Long, id: Long)
POST          /brand/:brandId/testimonial                                    controllers.BrandTestimonials.create(brandId: Long)
POST          /brand/:brandId/testimonial/:id                                controllers.BrandTestimonials.update(brandId: Long, id: Long)
DELETE        /brand/:brandId/testimonial/:id                                controllers.BrandTestimonials.remove(brandId: Long, id: Long)

POST          /contribution/new                                              controllers.Contributions.create(page: String)
GET           /contribution/:id/delete                                       controllers.Contributions.delete(id: Long, page: String)

GET           /coupon/new                                                    controllers.core.Coupons.add()
POST          /coupon/new                                                    controllers.core.Coupons.create()
GET           /coupons                                                       controllers.core.Coupons.index()
GET           /coupon/:code/delete                                           controllers.core.Coupons.delete(code: String)
GET           /coupon/:code                                                  controllers.core.Coupons.get(code: String)

POST          /customer/:id/card                                             controllers.core.Customers.updateCard(id: Long)
POST          /customer/:id/subscription                                     controllers.core.Customers.updateSubscription(id: Long)
POST          /customer                                                      controllers.core.Customers.becomeCustomer()

GET           /reset/:token                                                controllers.PasswordReset.resetPassword(token: String)
POST          /reset/:token                                                controllers.PasswordReset.handleResetPassword(token: String)

GET           /member/:id/experiment                                       controllers.hm.Experiments.add(id: Long)
POST          /member/:id/experiment                                       controllers.hm.Experiments.create(id: Long)
DELETE        /member/:id/experiment/:experimentId                         controllers.hm.Experiments.delete(id: Long, experimentId: Long)
DELETE        /member/:id/experiment/:experimentId/picture                 controllers.hm.Experiments.deletePicture(id: Long, experimentId: Long)
GET           /member/:id/experiment/:experimentId                         controllers.hm.Experiments.edit(id: Long, experimentId: Long)
GET           /member/:id/experiments                                      controllers.hm.Experiments.experiments(id: Long)
POST          /member/:id/experiment/:experimentId                         controllers.hm.Experiments.update(id: Long, experimentId: Long)

GET           /experiment/:id/picture                                      controllers.hm.Experiments.picture(id: Long, size: String ?= "")

POST          /login-reminder                                              controllers.security.LoginReminder.handle()
GET           /login-reminder                                              controllers.security.LoginReminder.page()

GET           /members                                                     controllers.hm.Members.index
GET           /member/new                                                  controllers.hm.Members.add
GET           /member/existing/organisation                                controllers.hm.Members.addExistingOrganisation
GET           /member/existing/person                                      controllers.hm.Members.addExistingPerson
POST          /member                                                      controllers.hm.Members.create
POST          /member/existing/organisation/                               controllers.hm.Members.updateExistingOrg
POST          /member/existing/person/                                     controllers.hm.Members.updateExistingPerson
GET           /member/:id/edit                                             controllers.hm.Members.edit(id: Long)
POST          /member/:id                                                  controllers.hm.Members.update(id: Long)
POST          /member/:personId/reason                                     controllers.hm.Members.updateReason(personId: Long)
POST          /member/:id/delete                                           controllers.hm.Members.delete(id: Long)
GET           /membership/welcome                                          controllers.hm.Membership.welcome
GET           /membership/payment                                          controllers.hm.Membership.payment(orgId: Option[Long] ?= None)
POST          /membership/payment                                          controllers.hm.Membership.charge
GET           /membership/congratulations                                  controllers.hm.Membership.congratulations(orgId: Option[Long] ?= None)

GET           /notifications/:offset/:limit                                  controllers.core.Notifications.list(offset: Long, limit: Long)
POST          /notifications                                                 controllers.core.Notifications.read()
GET           /notifications/unread                                          controllers.core.Notifications.unread()

POST          /organization/:id/activation                                   controllers.core.Organisations.activation(id: Long)
GET           /organization/new                                              controllers.core.Organisations.add
POST          /organization/:id/cancel                                       controllers.core.Organisations.cancel(id: Long)
POST          /organizations                                                 controllers.core.Organisations.create
POST          /organizer                                                     controllers.core.Organisations.createOrganizer
POST          /organization/:id/delete                                       controllers.core.Organisations.delete(id: Long)
DELETE        /organization/:id/logo/delete                                  controllers.core.Organisations.deleteLogo(id: Long, logoId: String)
GET           /organization/:id                                              controllers.core.Organisations.details(id: Long)
GET           /organization/:id/edit                                         controllers.core.Organisations.edit(id: Long)
GET           /organizations                                                 controllers.core.Organisations.index
GET           /organization/:id/logo                                         controllers.core.Organisations.logo(id: String)
GET           /organization/:id/name                                         controllers.core.Organisations.name(id: Long)
POST          /organization/:id                                              controllers.core.Organisations.update(id: Long)
GET           /organizations/search                                          controllers.core.Organisations.search(query: Option[String])
POST          /organization/:id/logo                                         controllers.core.Organisations.uploadLogo(id: Long)

POST          /password/reset                                                controllers.PasswordReset.handleStartResetPassword

GET           /people                                                        controllers.core.People.index

GET           /person/new                                                    controllers.core.People.add
POST          /person/new                                                    controllers.core.People.create
GET           /person/:id                                                    controllers.core.People.details(id: Long)
POST          /person/:id                                                    controllers.core.People.update(id: Long)
GET           /person/:id/edit                                               controllers.core.People.edit(id: Long)
POST          /person/:id/activation                                         controllers.core.People.activation(id: Long)
POST          /person/:id/delete                                             controllers.core.People.delete(id: Long)
POST          /person/:id/cancel                                             controllers.core.People.cancel(id: Long)
GET           /person/:id/tabs                                               controllers.core.People.renderTabs(id: Long, tab: String)

POST          /person/:id/photo/upload                                       controllers.core.ProfilePhotos.upload(id: Long)
GET           /person/photo/:photoId                                         controllers.core.ProfilePhotos.photo(photoId: String)
DELETE        /person/:id/photo/delete                                       controllers.core.ProfilePhotos.delete(id: Long)
POST          /person/:id/photo                                              controllers.core.ProfilePhotos.update(id: Long)
GET           /person/:id/photo/choose                                       controllers.core.ProfilePhotos.choose(id: Long)

POST          /person/relation/new                                           controllers.core.People.addRelationship
GET           /person/:personId/relation/:organisationId/delete              controllers.core.People.deleteRelationship(page: String, personId: Long, organisationId: Long)

GET           /products                                                      controllers.hm.Products.index
GET           /product/new                                                   controllers.hm.Products.add
POST          /product/:id/activation                                        controllers.hm.Products.activation(id: Long)
POST          /product/new                                                   controllers.hm.Products.create
GET           /product/:id                                                   controllers.hm.Products.details(id: Long)
POST          /product/:id                                                   controllers.hm.Products.update(id: Long)
GET           /product/:id/edit                                              controllers.hm.Products.edit(id: Long)
POST          /product/:id/delete                                            controllers.hm.Products.delete(id: Long)

GET           /product/:id/picture                                           controllers.hm.Products.picture(id: Long)
POST          /product/:id/picture/delete                                    controllers.hm.Products.deletePicture(id: Long)

POST          /product/brand/new                                             controllers.hm.Products.addBrand
GET           /product/:productId/brand/:brandId/delete                      controllers.hm.Products.deleteBrand(page: String, productId: Long, brandId: Long)

GET           /profile/:id/person/membership                                 controllers.hm.Profile.membership(id: Long)
GET           /profile/:id/org/membership                                    controllers.hm.Profile.orgMembership(id: Long)
GET           /profile/:id/person/steps/:steps                               controllers.core.ProfileStrengths.personWidget(id: Long, steps: Boolean)

GET           /registration/welcome                                          controllers.Registration.welcome
GET           /registration/step1                                            controllers.Registration.step1(org: Boolean ?= false)
GET           /registration/step2                                            controllers.Registration.step2
GET           /registration/step3                                            controllers.Registration.step3
POST          /registration/save/person                                      controllers.Registration.savePerson
POST          /registration/save/org                                         controllers.Registration.saveOrg
GET           /registration/payment                                          controllers.Registration.payment
POST          /registration/payment                                          controllers.Registration.charge
GET           /registration/authenticate/:provider                           controllers.Registration.authenticate(provider)
POST          /registration/authenticate                                     controllers.Registration.authenticateByEmail
GET           /registration/congratulations                                  controllers.Registration.congratulations(orgId: Option[Long] ?= None)

POST          /person/:personId/signature                                    controllers.Signatures.upload(personId: Long)
GET           /person/:signatureId/signature                                 controllers.Signatures.signature(signatureId: String)
POST          /person/:personId/signature/delete                             controllers.Signatures.delete(personId: Long)

GET           /trial-coupon/new                                              controllers.core.TrialCoupons.add()
POST          /trial-coupon/new                                              controllers.core.TrialCoupons.create()
GET           /trial-coupons                                                 controllers.core.TrialCoupons.index()
GET           /trial-coupon/:code/delete                                     controllers.core.TrialCoupons.delete(code: String)
GET           /trial-coupon/:code                                            controllers.core.TrialCoupons.get(code: String)

GET           /trial-membership                                              controllers.TrialMembership.step1()
GET           /trial-membership/payment                                      controllers.TrialMembership.payment()
POST          /trial-membership/payment                                      controllers.TrialMembership.charge()
GET           /trial-membership/congrats/:code                               controllers.TrialMembership.congratulations(code: String)

POST          /utilities/markdown                                            controllers.Utilities.markdown()
GET           /utilities/url/:url                                            controllers.Utilities.validate(url)
GET           /utilities/vat/:number                                         controllers.Utilities.validateVAT(number)

GET           /user/account                                                  controllers.core.UserAccounts.account
POST          /user/disconnect/:profileId                                    controllers.core.UserAccounts.disconnect(profileId: String)
POST          /user/newPassword                                              controllers.core.UserAccounts.handleNewPassword
POST          /user/password                                                 controllers.core.UserAccounts.changePassword
GET           /user/switch                                                   controllers.core.UserAccounts.switchRole
POST          /user/email                                                    controllers.core.UserAccounts.changeEmail
GET           /user/email/:token                                             controllers.core.UserAccounts.handleEmailChange(token: String)

POST          /webhooks/stripe                                               controllers.webhooks.Stripe.event

->            /api/v2                                                        api.Routes

# Public assets
GET           /assets/*file                                                  controllers.Assets.at(path="/public", file)

## SecureSocial
GET           /login                                                         controllers.core.LoginPage.login
GET           /logout                                                        controllers.core.LoginPage.logout(typ: Option[String] ?= None, msg: Option[String] ?= None)
GET           /authenticate/:provider                                        controllers.security.ProviderController.authenticate(provider, redirectTo: Option[String])
POST          /authenticate/:provider                                        controllers.security.ProviderController.authenticateByPost(provider, redirectTo: Option[String])
