GET /        controllers.Dashboard.index
GET /about   controllers.Dashboard.about
GET /api     controllers.Dashboard.api


GET  /organizations                 controllers.Organisations.index
POST /organizations                 controllers.Organisations.create
GET  /organization/new              controllers.Organisations.add
GET  /organization/:id/edit         controllers.Organisations.edit(id: Long)
GET  /organization/:id              controllers.Organisations.details(id: Long)
POST /organization/:id              controllers.Organisations.update(id: Long)
POST /organization/:id/delete       controllers.Organisations.delete(id: Long)
POST /organization/:id/activation   controllers.Organisations.activation(id: Long)

GET  /people       controllers.People.index

GET  /person/new              controllers.People.add
POST /person/new              controllers.People.create
GET  /person/:id              controllers.People.details(id: Long)
POST /person/:id              controllers.People.update(id: Long)
GET  /person/:id/edit         controllers.People.edit(id: Long)
POST /person/:id/activation   controllers.People.activation(id: Long)
POST /person/:id/delete       controllers.People.delete(id: Long)

GET   /person/:id/licenses/new   controllers.Licenses.add(id: Long)
POST  /person/:id/licenses/new   controllers.Licenses.create(id: Long)

GET  /license/:id/edit     controllers.Licenses.edit(id: Long)
POST /license/:id          controllers.Licenses.update(id: Long)
POST /license/:id/delete   controllers.Licenses.delete(id: Long)

POST /person/membership/new                                controllers.People.addMembership
GET  /person/:personId/membership/:organisationId/delete   controllers.People.deleteMembership(page: String, personId: Long, organisationId: Long)

GET  /brands               controllers.Brands.index
GET  /brand/new            controllers.Brands.add
POST /brand/new            controllers.Brands.create
GET  /brand/:code          controllers.Brands.details(code)
POST /brand/:code          controllers.Brands.update(code)
GET  /brand/:code/edit     controllers.Brands.edit(code)
POST /brand/:code/delete   controllers.Brands.delete(code)

GET  /products             controllers.Products.index
GET  /product/new          controllers.Products.add
POST /product/new          controllers.Products.create
GET  /product/:id          controllers.Products.details(id: Long)
POST /product/:id          controllers.Products.update(id: Long)
GET  /product/:id/edit     controllers.Products.edit(id: Long)
POST /product/:id/delete   controllers.Products.delete(id: Long)

POST /product/brand/new                         controllers.Products.addBrand
GET  /product/:productId/brand/:brandId/delete  controllers.Products.deleteBrand(page: String, productId: Long, brandId: Long)

POST /user    controllers.UserAccounts.update

GET  /account/:id            controllers.Accounts.details(id: Long)
POST /account/:id/activate   controllers.Accounts.activate(id: Long)
POST /account/:id/deactivate controllers.Accounts.deactivate(id: Long)

GET  /bookings                 controllers.BookingEntries.index
GET  /booking/new              controllers.BookingEntries.add
POST /booking/new              controllers.BookingEntries.create
GET  /booking/:bookingNumber   controllers.BookingEntries.details(bookingNumber: Int)


GET /api/v1/licensees/:brandCode                    controllers.LicensesApi.licensees(brandCode: String, date: Option[String])
GET /api/v1/licensee/:licenseeId/brand/:brandCode   controllers.LicensesApi.licensee(licenseeId: Long, brandCode: String)

GET /api/v1/people       controllers.PeopleApi.people(stakeholders_only: Option[Boolean], board_members_only: Option[Boolean])
GET /api/v1/person/:id   controllers.PeopleApi.person(id: Long)

GET /api/v1/organizations      controllers.OrganisationsApi.organisations(legal_entities_only: Option[Boolean])
GET /api/v1/organization/:id   controllers.OrganisationsApi.organisation(id: Long)

GET /api/v1/products       controllers.ProductsApi.products
GET /api/v1/product/:id   controllers.ProductsApi.product(id: Long)

GET /assets/*file   controllers.Assets.at(path="/public", file)

## SecureSocial
GET      /login                      securesocial.controllers.LoginPage.login
GET      /logout                     securesocial.controllers.LoginPage.logout

# OAuth entry points
GET      /authenticate/:provider     securesocial.controllers.ProviderController.authenticate(provider)
POST     /authenticate/:provider     securesocial.controllers.ProviderController.authenticateByPost(provider)
GET      /not-authorized             securesocial.controllers.ProviderController.notAuthorized
