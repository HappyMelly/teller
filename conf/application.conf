# If true, emails won't be sent, only printed into a standard output
mail.stub = false

akka.jvm-exit-on-fatal-error = off

application.secret="xndEvwP2EDv`FhlgrEuQ@lTDljV@wYEItClmFB94Fj?aWEyoekM_=v@:4w]9:Qth"
# Override in test and production.
application.baseUrl="http://localhost:9000"

slick.dbs.default.driver = "slick.driver.MySQLDriver$"
slick.dbs.default.db.driver = com.mysql.jdbc.Driver
slick.dbs.default.db.url = "jdbc:mysql://localhost/happymelly"
slick.dbs.default.db.user = "melly"
slick.dbs.default.db.password = "shum"
# logger.scala.slick.jdbc.JdbcBackend.statement=DEBUG

slick.default="models.*"

aws.accessKeyId="changeme"
aws.accessKeyId=${?AWS_ACCESS_KEY_ID}
aws.secretKey="changeme"
aws.secretKey=${?AWS_SECRET_KEY}

cdn.url = ${?CDN_URL}

s3.bucketName="happymelly-teller-test"

# Mail notification headers: override in test and production.
mail.from = "DEVELOPMENT <no-reply@happymelly.com>"
from = "Happy Melly Teller <no-reply@happymelly.com>"

mailchimp.url = ${?MAILCHIMP_URL}
mailchimp.token = ${?MAILCHIMP_TOKEN}
# "aced23x","321as3"
mailchimp.listIds = ${?MAILCHIMP_LIST_IDS}

memcached.host=${?MEMCACHIER_SERVERS}
memcached.user=${?MEMCACHIER_USERNAME}
memcached.password=${?MEMCACHIER_PASSWORD}

slack.webhook = ${?SLACK_WEBHOOK}
slack.channel = "test-webhooks"
slack.username = "teller"

play {
    modules {
        enabled += be.objectify.deadbolt.scala.DeadboltModule
        enabled += modules.TellerDeadboltModule
    }
}

# Mock mailer for development: in production, override mock=false to use SendGrid configuration.

play.mailer {
    host = ${?SENDGRID_SMTP_HOST}
    user = ${?SENDGRID_USERNAME}
    password = ${?SENDGRID_PASSWORD}
    port = 587
    ssl = false
    mock = false
}

stripe.public_key = ${?STRIPE_PUBLIC_KEY}
stripe.secret_key = ${?STRIPE_SECRET_KEY}

include "securesocial.conf"
