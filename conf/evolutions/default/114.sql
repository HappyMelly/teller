# --- !Ups
create table EVENT_ATTENDEE (
  ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  EVENT_ID BIGINT NOT NULL,
  PERSON_ID BIGINT,
  FIRST_NAME VARCHAR(254) NOT NULL,
  LAST_NAME VARCHAR(254) NOT NULL,
  EMAIL VARCHAR(254) NOT NULL,
  DATE_OF_BIRTH DATE DEFAULT NULL,
  COUNTRY_CODE CHAR(2),
  CITY VARCHAR(254),
  STREET_1 VARCHAR(254),
  STREET_2 VARCHAR(254),
  PROVINCE VARCHAR(254),
  POSTCODE VARCHAR(254),
  EVALUATION_ID BIGINT,
  CERTIFICATE VARCHAR(254),
  ISSUED DATE,
  ORGANISATION VARCHAR(254),
  COMMENT MEDIUMTEXT,
  ROLE VARCHAR(254)
);

alter table EVENT_ATTENDEE add constraint ATTENDEE_FK foreign key(EVENT_ID) references EVENT(ID) on update NO ACTION on delete CASCADE;

ALTER TABLE EVENT_ATTENDEE ADD COLUMN PARTICIPANT_ID BIGINT;
ALTER TABLE EVENT_ATTENDEE ADD COLUMN OLD_PERSON_ID BIGINT;
UPDATE PERSON p, LICENSE l SET p.VIRTUAL = 0 WHERE l.LICENSEE_ID = p.ID;
INSERT INTO EVENT_ATTENDEE (EVENT_ID, PERSON_ID, FIRST_NAME, LAST_NAME, EMAIL, DATE_OF_BIRTH, COUNTRY_CODE, CITY, STREET_1, STREET_2, PROVINCE, POSTCODE, EVALUATION_ID, CERTIFICATE, ISSUED, ORGANISATION, `COMMENT`, ROLE, PARTICIPANT_ID, OLD_PERSON_ID) SELECT ep.EVENT_ID, ep.PERSON_ID, p.FIRST_NAME, p.LAST_NAME, p.EMAIL, p.`BIRTHDAY`, a.COUNTRY_CODE, a.CITY, a.STREET_1, a.STREET_2, a.PROVINCE, a.POST_CODE, ep.EVALUATION_ID, ep.`CERTIFICATE`, ep.ISSUED, ep.ORGANISATION, ep.`COMMENT`, ep.ROLE, ep.ID, ep.PERSON_ID from EVENT_PARTICIPANT ep, PERSON p, ADDRESS a WHERE ep.PERSON_ID = p.ID AND p.VIRTUAL = 0 AND p.ADDRESS_ID = a.ID;

ALTER TABLE EVALUATION ADD COLUMN ATTENDEE_ID BIGINT NOT NULL DEFAULT 0 AFTER PERSON_ID;
UPDATE EVALUATION e, EVENT_ATTENDEE a SET e.ATTENDEE_ID = a.ID WHERE e.ID = a.EVALUATION_ID;
DELETE ep FROM EVENT_PARTICIPANT ep, EVENT_ATTENDEE ea WHERE ep.ID = ea.PARTICIPANT_ID;

INSERT INTO EVENT_ATTENDEE (EVENT_ID, FIRST_NAME, LAST_NAME, EMAIL, DATE_OF_BIRTH, COUNTRY_CODE, CITY, STREET_1, STREET_2, PROVINCE, POSTCODE, EVALUATION_ID, CERTIFICATE, ISSUED, ORGANISATION, `COMMENT`, ROLE, PARTICIPANT_ID, OLD_PERSON_ID) SELECT ep.EVENT_ID, p.FIRST_NAME, p.LAST_NAME, p.EMAIL, p.`BIRTHDAY`, a.COUNTRY_CODE, a.CITY, a.STREET_1, a.STREET_2, a.PROVINCE, a.POST_CODE, ep.EVALUATION_ID, ep.`CERTIFICATE`, ep.ISSUED, ep.ORGANISATION, ep.`COMMENT`, ep.ROLE, ep.ID, ep.PERSON_ID from EVENT_PARTICIPANT ep, PERSON p, ADDRESS a WHERE ep.PERSON_ID = p.ID AND p.VIRTUAL = 1 AND p.ADDRESS_ID = a.ID;

UPDATE EVALUATION e, EVENT_ATTENDEE a SET e.ATTENDEE_ID = a.ID WHERE e.ID = a.EVALUATION_ID AND a.PERSON_ID IS NULL;
DELETE ep FROM EVENT_PARTICIPANT ep, EVENT_ATTENDEE ea WHERE ep.ID = ea.PARTICIPANT_ID AND ea.PERSON_ID IS NULL;
DROP TABLE EVENT_PARTICIPANT;

DELETE ps FROM PROFILE_STRENGTH ps, EVENT_ATTENDEE ea WHERE ps.`OBJECT_ID` = ea.OLD_PERSON_ID AND ps.`ORG` = 0 AND ea.PERSON_ID IS NULL;
DELETE ua FROM USER_ACCOUNT ua, EVENT_ATTENDEE ea WHERE ua.PERSON_ID = ea.OLD_PERSON_ID AND ea.PERSON_ID IS NULL;
DELETE a FROM ACCOUNT a, EVENT_ATTENDEE ea WHERE a.PERSON_ID = ea.OLD_PERSON_ID AND ea.PERSON_ID IS NULL;
DELETE a, p FROM ADDRESS a, EVENT_ATTENDEE ea, PERSON p WHERE p.ID = ea.OLD_PERSON_ID AND a.ID = p.ADDRESS_ID AND ea.PERSON_ID IS NULL;

ALTER TABLE EVENT_ATTENDEE DROP COLUMN PARTICIPANT_ID;
ALTER TABLE EVENT_ATTENDEE DROP COLUMN OLD_PERSON_ID;

DELETE FROM EVALUATION WHERE ATTENDEE_ID = 0;
ALTER TABLE EVALUATION add constraint ATTENDEE_EVALUATION_FK FOREIGN KEY (ATTENDEE_ID) references EVENT_ATTENDEE(ID) on update NO ACTION on delete CASCADE;
ALTER TABLE EVALUATION DROP COLUMN PERSON_ID;
